// Code generated by MockGen. DO NOT EDIT.
// Source: internal/client/interface.go

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	model "github.com/Megidy/rarible/internal/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockRaribleClient is a mock of RaribleClient interface.
type MockRaribleClient struct {
	ctrl     *gomock.Controller
	recorder *MockRaribleClientMockRecorder
}

// MockRaribleClientMockRecorder is the mock recorder for MockRaribleClient.
type MockRaribleClientMockRecorder struct {
	mock *MockRaribleClient
}

// NewMockRaribleClient creates a new mock instance.
func NewMockRaribleClient(ctrl *gomock.Controller) *MockRaribleClient {
	mock := &MockRaribleClient{ctrl: ctrl}
	mock.recorder = &MockRaribleClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRaribleClient) EXPECT() *MockRaribleClientMockRecorder {
	return m.recorder
}

// GetOwnershipByID mocks base method.
func (m *MockRaribleClient) GetOwnershipByID(ctx context.Context, id string) (*model.OwnershipDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwnershipByID", ctx, id)
	ret0, _ := ret[0].(*model.OwnershipDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOwnershipByID indicates an expected call of GetOwnershipByID.
func (mr *MockRaribleClientMockRecorder) GetOwnershipByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwnershipByID", reflect.TypeOf((*MockRaribleClient)(nil).GetOwnershipByID), ctx, id)
}

// GetTraitRarity mocks base method.
func (m *MockRaribleClient) GetTraitRarity(ctx context.Context, req *model.TraitRarityRequestDTO) (*model.TraitRarityResponseDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTraitRarity", ctx, req)
	ret0, _ := ret[0].(*model.TraitRarityResponseDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTraitRarity indicates an expected call of GetTraitRarity.
func (mr *MockRaribleClientMockRecorder) GetTraitRarity(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTraitRarity", reflect.TypeOf((*MockRaribleClient)(nil).GetTraitRarity), ctx, req)
}
