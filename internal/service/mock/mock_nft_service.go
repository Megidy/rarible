// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/interface.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	model "github.com/Megidy/rarible/internal/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockNFTService is a mock of NFTService interface.
type MockNFTService struct {
	ctrl     *gomock.Controller
	recorder *MockNFTServiceMockRecorder
}

// MockNFTServiceMockRecorder is the mock recorder for MockNFTService.
type MockNFTServiceMockRecorder struct {
	mock *MockNFTService
}

// NewMockNFTService creates a new mock instance.
func NewMockNFTService(ctrl *gomock.Controller) *MockNFTService {
	mock := &MockNFTService{ctrl: ctrl}
	mock.recorder = &MockNFTServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNFTService) EXPECT() *MockNFTServiceMockRecorder {
	return m.recorder
}

// GetOwnershipByID mocks base method.
func (m *MockNFTService) GetOwnershipByID(ctx context.Context, id string) (*model.OwnershipDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwnershipByID", ctx, id)
	ret0, _ := ret[0].(*model.OwnershipDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOwnershipByID indicates an expected call of GetOwnershipByID.
func (mr *MockNFTServiceMockRecorder) GetOwnershipByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwnershipByID", reflect.TypeOf((*MockNFTService)(nil).GetOwnershipByID), ctx, id)
}

// GetTraitRarity mocks base method.
func (m *MockNFTService) GetTraitRarity(ctx context.Context, req model.TraitRarityRequestDTO) (*model.TraitRarityResponseDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTraitRarity", ctx, req)
	ret0, _ := ret[0].(*model.TraitRarityResponseDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTraitRarity indicates an expected call of GetTraitRarity.
func (mr *MockNFTServiceMockRecorder) GetTraitRarity(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTraitRarity", reflect.TypeOf((*MockNFTService)(nil).GetTraitRarity), ctx, req)
}
